{
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "Havo Express Application",
    "description": "Havo Express Application Routes"
  },
  "host": "havobackend.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "API Docs",
      "description": "API documentation"
    },
    {
      "name": "Email",
      "description": "Trigger OTP and verify Email Address"
    },
    {
      "name": "User",
      "description": "Sign Up , Login and Logout users"
    },
    {
      "name": "User Category",
      "description": "User`s categories and dialogue"
    },
    {
      "name": "Login Activity",
      "description": "Login Activity routes"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API Docs"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/deleteEverything": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User SignUP Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Username - NoobMaster69"
                },
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                },
                "password": {
                  "type": "string",
                  "example": "User-password"
                },
                "fname": {
                  "type": "string",
                  "example": "Noob"
                },
                "lname": {
                  "type": "string",
                  "example": "Master"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create User in database with proper credentials.",
            "schema": {
              "type": "object",
              "properties": {
                "auth": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYzZlMmZmMTYyMDUyZmNiYjI0OGZlYyIsInRva2VuX2lkIjoiODc5OEdUREQyODI2WkZQQiIsImlhdCI6MTY0MDQyNDE5Mn0.89JxJwWzT3DMSGCX3zQtPpf5rgSSJVS2cvpDwHUn-4U"
                },
                "message": {
                  "type": "string",
                  "example": "User created and Logged in"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "DetailsNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username, Email, Password not found"
                    }
                  }
                },
                "UsernameNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username not found"
                    }
                  }
                },
                "EmailNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not Found"
                    }
                  }
                },
                "PasswordNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Multiple 401 errors",
            "schema": {
              "type": "object",
              "properties": {
                "UserEmailNotVerified_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not verified"
                    }
                  }
                },
                "OTPNotVerified_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP not verified"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Multiple 409 errors",
            "schema": {
              "type": "object",
              "properties": {
                "UserEmail_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User Email already found."
                    }
                  }
                },
                "UserName_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username already used."
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error occured",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User Login Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                },
                "password": {
                  "type": "string",
                  "example": "User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in",
            "schema": {
              "type": "object",
              "properties": {
                "auth": {
                  "type": "boolean",
                  "example": true
                },
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYzg5MGJiY2JmMjc1NDAwZDRkZGJmOSIsInRva2VuX2lkIjoiOTEwOVpGTVAxMDE0RUFBVSIsImlhdCI6MTY0MDUzNDI5N30.x92jESKmKLYFp1VbHBM9JMbUh8jfmR56ChrTIBb0_II"
                },
                "message": {
                  "type": "string",
                  "example": "User found and Logged in"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "DetailsNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email, Password not found"
                    }
                  }
                },
                "EmailNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not Found"
                    }
                  }
                },
                "PasswordNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                },
                "InvalidCredentials_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error occured",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/forget/password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Registered Email Id",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password reset OTP sent to user`s registered Email Id"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/update/password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Update User Password without logged in.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "resetPasswordToken": {
                  "type": "string",
                  "example": "AB12CD2"
                },
                "password": {
                  "type": "string",
                  "example": "XXXAAABB"
                },
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password reset OTP sent to user`s registered Email Id"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User logged in"
          },
          "204": {
            "description": "User logged in",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Password reset successfull"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 Errors",
            "schema": {
              "type": "object",
              "properties": {
                "ResetPasswordTokenNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Reset Password Token not provided"
                    }
                  }
                },
                "PasswordNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not provided"
                    }
                  }
                },
                "OTPExpired_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP Expired"
                    }
                  }
                },
                "EmailNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not Expired"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "User logged in",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "No user found with this Email ID"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/update/user/password": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Update User Password when logged in",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "XXXXXXewfefyyy"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User logged in",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Password update successfull"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/email/trigger/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email id required for OTP",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "200shreyans@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent to user",
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "U2FsdGVkX1+ZMdUr8NfZX/FCeKFc1fdrnsVm1AONDODv6kxbHuQ/8ZoQcrAN2zmxUZUBWFn6ihnpHW+s/gNpc+Mg4pxk++JoMix1N3stdI4aAYSKdYsPx+V/tqvSgOGijabkUW1kRLcwWeMlTJO/2Q=="
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Email not provided.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email not provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/email/verify/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "OTP Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "Verification Key from trigger OTP"
                },
                "otp": {
                  "type": "string",
                  "example": "XXXXXX"
                },
                "check": {
                  "type": "string",
                  "example": "Email ID to be verified"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified by user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "SUCCESS"
                },
                "message": {
                  "type": "string",
                  "example": "OTP Matched"
                },
                "check": {
                  "type": "string",
                  "example": "200shreyans@gmail.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "VerificationKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification_key not provided"
                    }
                  }
                },
                "OTP_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP not provided"
                    }
                  }
                },
                "WrongKey_Error_or_CorouptedKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification key corupted"
                    }
                  }
                },
                "Check_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email ID Incorrect"
                    }
                  }
                },
                "WrongOtp_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP NOT Matched"
                    }
                  }
                },
                "OTPExpired_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP Expired"
                    }
                  }
                },
                "OTPAlreadyUsed_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP already used"
                    }
                  }
                },
                "BadRequest_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/logins/show": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all User Logins",
            "schema": {
              "type": "object",
              "properties": {
                "user_logins": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "61c89118cbf275400d4ddc01"
                      },
                      "userId": {
                        "type": "string",
                        "example": "61c890bbcbf275400d4ddbf9"
                      },
                      "loggedOut": {
                        "type": "boolean",
                        "example": false
                      },
                      "loggedInAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "loggedOutAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "ipAddress": {
                        "type": "string",
                        "example": "::1"
                      },
                      "tokenId": {
                        "type": "string",
                        "example": "9109ZFMP1014EAAU"
                      },
                      "tokenSecret": {
                        "type": "string",
                        "example": "77777979ENSVHLIO75977759OFZNRMEM"
                      },
                      "tokenDeleted": {
                        "type": "boolean",
                        "example": false
                      },
                      "device": {
                        "type": "string",
                        "example": "PostmanRuntime/7.28.4"
                      },
                      "__v": {
                        "type": "number",
                        "example": 0
                      },
                      "current": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/delete/{login_id}": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete selected user login from token ID",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean",
                  "example": true
                },
                "userLogin": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "61c890bbcbf275400d4ddbfc"
                    },
                    "userId": {
                      "type": "string",
                      "example": "61c890bbcbf275400d4ddbf9"
                    },
                    "loggedOut": {
                      "type": "boolean",
                      "example": false
                    },
                    "loggedInAt": {
                      "type": "string",
                      "example": "2021-12-26T15:53:00.797Z"
                    },
                    "loggedOutAt": {
                      "type": "string",
                      "example": "2021-12-26T15:53:00.797Z"
                    },
                    "ipAddress": {
                      "type": "string",
                      "example": "::1"
                    },
                    "tokenId": {
                      "type": "string",
                      "example": "1114SEQI4644QYMY"
                    },
                    "tokenSecret": {
                      "type": "string",
                      "example": "27999797XVNSAHFV22272222GKZJUGSM"
                    },
                    "tokenDeleted": {
                      "type": "boolean",
                      "example": true
                    },
                    "device": {
                      "type": "string",
                      "example": "PostmanRuntime/7.28.4"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/delete/all/not-current": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Log out from all devices except current",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean",
                  "example": true
                },
                "userLogin": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "61c89118cbf275400d4ddc01"
                      },
                      "userId": {
                        "type": "string",
                        "example": "61c890bbcbf275400d4ddbf9"
                      },
                      "loggedOut": {
                        "type": "boolean",
                        "example": false
                      },
                      "loggedInAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "loggedOutAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "ipAddress": {
                        "type": "string",
                        "example": "::1"
                      },
                      "tokenId": {
                        "type": "string",
                        "example": "9109ZFMP1014EAAU"
                      },
                      "tokenSecret": {
                        "type": "string",
                        "example": "77777979ENSVHLIO75977759OFZNRMEM"
                      },
                      "tokenDeleted": {
                        "type": "boolean",
                        "example": false
                      },
                      "device": {
                        "type": "string",
                        "example": "PostmanRuntime/7.28.4"
                      },
                      "__v": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/deletes/all": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout from all devices.",
            "schema": {
              "type": "object",
              "properties": {
                "deleted": {
                  "type": "boolean",
                  "example": true
                },
                "user_login": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "61c89118cbf275400d4ddc01"
                      },
                      "userId": {
                        "type": "string",
                        "example": "61c890bbcbf275400d4ddbf9"
                      },
                      "loggedOut": {
                        "type": "boolean",
                        "example": true
                      },
                      "loggedInAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "loggedOutAt": {
                        "type": "string",
                        "example": "2021-12-26T15:53:00.797Z"
                      },
                      "ipAddress": {
                        "type": "string",
                        "example": "::1"
                      },
                      "tokenId": {
                        "type": "string",
                        "example": "9109ZFMP1014EAAU"
                      },
                      "tokenSecret": {
                        "type": "string",
                        "example": "77777979ENSVHLIO75977759OFZNRMEM"
                      },
                      "tokenDeleted": {
                        "type": "boolean",
                        "example": true
                      },
                      "device": {
                        "type": "string",
                        "example": "PostmanRuntime/7.28.4"
                      },
                      "__v": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/category/get": {
      "post": {
        "tags": [
          "User Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Update user dialogue",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Cateories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "61c8af95598a5a9b7a56ee92"
                  },
                  "title": {
                    "type": "string",
                    "example": "INTRO"
                  },
                  "dialogues": {
                    "type": "array",
                    "example": [
                      "abcd"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "__v": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/category/create/category": {
      "post": {
        "tags": [
          "User Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Create Category",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "categoryName": {
                  "type": "string",
                  "example": "INTRO"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Cateories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "61c8af95598a5a9b7a56ee92"
                  },
                  "title": {
                    "type": "string",
                    "example": "INTRO"
                  },
                  "dialogues": {
                    "type": "array",
                    "example": [],
                    "items": {}
                  },
                  "__v": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/category/update/dialogue": {
      "post": {
        "tags": [
          "User Category"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Update user dialogue",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "categoryId": {
                  "type": "string",
                  "example": "61c8af95598a5a9b7a56ee92"
                },
                "dialogue": {
                  "type": "string",
                  "example": "abcd"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Cateories",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "61c8af95598a5a9b7a56ee92"
                  },
                  "title": {
                    "type": "string",
                    "example": "INTRO"
                  },
                  "dialogues": {
                    "type": "array",
                    "example": [
                      "abcd"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "__v": {
                    "type": "number",
                    "example": 1
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    }
  },
  "definitions": {
    "BlacklistToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "createdAt": {
          "type": "string",
          "example": "1640285891286"
        },
        "updatedAt": {
          "type": "string",
          "example": "1640285891286"
        }
      }
    },
    "OTP": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "example": "1640286062295"
        },
        "expirationTime": {
          "type": "string",
          "example": "1640286062295"
        },
        "otp": {
          "type": "string",
          "example": "XXXXXX"
        },
        "verified": {
          "type": "boolean",
          "example": true
        },
        "email": {
          "type": "string",
          "example": "XXXX@YYY.ZZZ"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "Shreyans13"
        },
        "email": {
          "type": "string",
          "example": "shreyans13xxxx@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "xxxxxxxxxxxxxxxxx"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "resetPasswordToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "resetPasswordExpiry": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "61c8af95598a5a9a7a56ee92"
              },
              "title": {
                "type": "string",
                "example": "INTRO"
              },
              "dialogues": {
                "type": "array",
                "example": [
                  "abcd"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "61bcd94c9975fe02148587b1"
        },
        "loggedOut": {
          "type": "boolean",
          "example": false
        },
        "loggedInAt": {
          "type": "string",
          "example": "1639766269396"
        },
        "loggedOutAt": {
          "type": "string",
          "example": "1639766269396"
        },
        "ipAddress": {
          "type": "string",
          "example": "::1"
        },
        "tokenId": {
          "type": "string",
          "example": "8778YZFX5888JYJL"
        },
        "tokenSecret": {
          "type": "string",
          "example": "22449244HBUBSKAF22929924JYKKLORN"
        },
        "tokenDeleted": {
          "type": "boolean",
          "example": true
        },
        "device": {
          "type": "string",
          "example": "PostmanRuntime/7.28.4"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61c8af95598a5a9b7a56ee92"
        },
        "title": {
          "type": "string",
          "example": "INTRO"
        },
        "dialogues": {
          "type": "array",
          "example": [
            "abcd"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}