{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Handwriter Express Application",
    "description": "Handwriter Express Application Routes"
  },
  "host": "https://handwritingbackend.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "API Docs",
      "description": "API documentation"
    },
    {
      "name": "Email",
      "description": "Trigger OTP and verify Email Address"
    },
    {
      "name": "User",
      "description": "Sign Up , Login and Logout users"
    },
    {
      "name": "Login Activity",
      "description": "Login Activity routes"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "API Docs"
        ],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User SignUP Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Username - NoobMaster69"
                },
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                },
                "password": {
                  "type": "string",
                  "example": "User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "DetailsNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username, Email, Password not found"
                    }
                  }
                },
                "UsernameNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username not found"
                    }
                  }
                },
                "EmailNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not Found"
                    }
                  }
                },
                "PasswordNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Multiple 409 errors",
            "schema": {
              "type": "object",
              "properties": {
                "UserEmail_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User Email already found."
                    }
                  }
                },
                "UserName_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Username already used."
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error occured",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "User Login Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "XXXXXX@yyyy.com"
                },
                "password": {
                  "type": "string",
                  "example": "User-password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "DetailsNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email, Password not found"
                    }
                  }
                },
                "EmailNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email not Found"
                    }
                  }
                },
                "PasswordNotFound_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                },
                "InvalidCredentials_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Password not Found"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error occured",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/email/trigger/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email id required for OTP",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "200shreyans@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent to user",
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "encoded"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Email not provided.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email not provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/email/verify/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "OTP Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "Verification Key from trigger OTP"
                },
                "otp": {
                  "type": "string",
                  "example": "XXXXXX"
                },
                "check": {
                  "type": "string",
                  "example": "Email ID to be verified"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "VerificationKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification_key not provided"
                    }
                  }
                },
                "OTP_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP not provided"
                    }
                  }
                },
                "WrongKey_Error_or_CorouptedKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification key corupted"
                    }
                  }
                },
                "Check_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email ID Incorrect"
                    }
                  }
                },
                "WrongOtp_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP NOT Matched"
                    }
                  }
                },
                "OTPExpired_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP Expired"
                    }
                  }
                },
                "OTPAlreadyUsed_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP already used"
                    }
                  }
                },
                "BadRequest_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/logins/show": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/delete/{login_id}": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/delete/all/not-current": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/user/logins/deletes/all": {
      "get": {
        "tags": [
          "Login Activity"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TBA",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Bad Request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token BlackListed"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BlacklistToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "createdAt": {
          "type": "string",
          "example": "1640285891286"
        },
        "updatedAt": {
          "type": "string",
          "example": "1640285891286"
        }
      }
    },
    "OTP": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "example": "1640286062295"
        },
        "expirationTime": {
          "type": "string",
          "example": "1640286062295"
        },
        "otp": {
          "type": "string",
          "example": "XXXXXX"
        },
        "verified": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "Shreyans13"
        },
        "email": {
          "type": "string",
          "example": "shreyans13xxxx@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "xxxxxxxxxxxxxxxxx"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "resetPasswordToken": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        },
        "resetPasswordExpiry": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYmY3N2M4MTcwMWYwM2QxMGZkOTBlYyIsInRva2VuX2lkIjoiMzkwMk9HRUwwOTEzREFESiIsImlhdCI6MTYzOTkzNzk5Mn0.noLtLpwevdnkhFU9uOKepT2Ynd-rjnRCCeLA3yd323g"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "61bcd94c9975fe02148587b1"
        },
        "loggedOut": {
          "type": "boolean",
          "example": false
        },
        "loggedInAt": {
          "type": "string",
          "example": "1639766269396"
        },
        "loggedOutAt": {
          "type": "string",
          "example": "1639766269396"
        },
        "ipAddress": {
          "type": "string",
          "example": "::1"
        },
        "tokenId": {
          "type": "string",
          "example": "8778YZFX5888JYJL"
        },
        "tokenSecret": {
          "type": "string",
          "example": "22449244HBUBSKAF22929924JYKKLORN"
        },
        "tokenDeleted": {
          "type": "boolean",
          "example": true
        },
        "device": {
          "type": "string",
          "example": "PostmanRuntime/7.28.4"
        }
      }
    }
  }
}