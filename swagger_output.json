{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Email",
      "description": "Trigger OTP and verify Email Address"
    },
    {
      "name": "User",
      "description": "Sign Up , Login and Logout users"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/send": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "produces": [],
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/logout": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/email/trigger/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Email id required for OTP",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "200shreyans@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent to user",
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "encoded"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Email not provided.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email not provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/email/verify/otp": {
      "post": {
        "tags": [
          "Email"
        ],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "OTP Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "verification_key": {
                  "type": "string",
                  "example": "Verification Key from trigger OTP"
                },
                "otp": {
                  "type": "string",
                  "example": "XXXXXX"
                },
                "check": {
                  "type": "string",
                  "example": "Email ID to be verified"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Multiple 400 errors",
            "schema": {
              "type": "object",
              "properties": {
                "VerificationKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification_key not provided"
                    }
                  }
                },
                "OTP_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP not provided"
                    }
                  }
                },
                "WrongKey_Error_or_CorouptedKey_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Verification key corupted"
                    }
                  }
                },
                "Check_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email ID Incorrect"
                    }
                  }
                },
                "WrongOtp_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP NOT Matched"
                    }
                  }
                },
                "OTPExpired_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP Expired"
                    }
                  }
                },
                "OTPAlreadyUsed_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "OTP already used"
                    }
                  }
                },
                "BadRequest_Error": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error message"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Error occured"
          }
        }
      }
    },
    "/user/logins/show": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/logins/delete/{login_id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "login_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/logins/delete/all/not-current": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/logins/deletes/all": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "type": "object",
          "properties": {
            "father": {
              "type": "string",
              "example": "Simon Doe"
            },
            "mother": {
              "type": "string",
              "example": "Marie Doe"
            }
          }
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "name",
        "age"
      ]
    },
    "VerificationKey": {
      "type": "object",
      "properties": {
        "verification_key": {
          "type": "string",
          "example": "encoded"
        }
      }
    }
  }
}